# root
type Query {
    # list all books
    listBooks: [Book!]
    # list all authors
    listAuthors: [Author!]
    # find author by id
    findBookById(id: Int!): Book
    # list all readers
    listReaders: [Reader!]
    # list all persons
    listPersons: [Person!]
}

type Mutation {
    addBook(book: BookInput): Book
}

input BookInput {
    name: String!
    author: AuthorInput!
    publicationYear: Int!
}

input AuthorInput {
    name: String!
    nationality: String!
}

# book
type Book {
    id: Int!
    name: String!
    author: Author!
    publicationYear: Int!
}

#person
interface Person {
    id: Int!
    name: String!
}

# author
type Author implements Person {
    id: Int!
    name: String!
    nationality: String!
}

#reader
type Reader implements Person {
    id: Int!
    name: String!
    books:[Book!]
}
